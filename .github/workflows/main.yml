name: CI/CD for Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Main

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Tweak config.js for local backend
        run: |
          sed -i 's#host: "http://localhost:4000"#host: ""#' js/config/config.js

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/school-web
          TAG=$(date +%Y%m%d%H%M%S)
          echo "Building $IMAGE:$TAG and latest"
          docker build --no-cache \
            -t $IMAGE:$TAG \
            -t $IMAGE:latest .

          echo "Pushing images"
          docker push $IMAGE:latest
          docker push $IMAGE:$TAG

      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            IMAGE=${{ secrets.DOCKER_USERNAME }}/school-web:latest

            echo "Pull latest image"
            docker pull $IMAGE

            # --- Добавляем очистку любого контейнера, слушающего порт 80 ---
            echo "Free up port 80 if it's in use by another container"
            OLD=$(docker ps -q --filter "publish=80")
            if [ -n "$OLD" ]; then
              echo "Stopping other containers on port 80: $OLD"
              docker stop $OLD
              docker rm   $OLD
            fi

            echo "Stop & remove old container if exists"
            if [ "$(docker ps -q -f name=school-web)" ]; then
              docker stop school-web
              docker rm school-web
            fi

            echo "Run new container"
            docker run -d \
              --restart=always \
              --name school-web \
              -p 80:80 \
              $IMAGE
